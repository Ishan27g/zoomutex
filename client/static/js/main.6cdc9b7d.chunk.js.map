{"version":3,"sources":["context/PeerContext.ts","context/SocketContext.ts","context/ContextProvider.tsx","components/Room/Video.tsx","components/Room/VideoList.tsx","components/Room/route.ts","components/Room/useUserMedia.ts","components/Room/Room.tsx","components/Room/useCallPeer.ts","components/Home/Home.tsx","App.tsx","components/Home/route.ts","reportWebVitals.ts","index.tsx","../node_modules/peerjs/dist sync"],"names":["peer","Peer","host","window","location","hostname","path","port","PeerContext","React","createContext","socket","io","origin","SocketContext","ContextProvider","children","Provider","value","Video","mediaStream","isCamera","videoRef","useRef","current","srcObject","style","border","undefined","autoPlay","playsInline","ref","VideoList","streams","elements","key","hasOwnProperty","push","roomRoute","useUserMedia","requestedMedia","useState","setMediaStream","useEffect","getTracks","forEach","track","stop","a","navigator","mediaDevices","getUserMedia","stream","console","error","enableStream","Room","match","useRouteMatch","params","roomId","useContext","peerjs","userMediaStream","audio","video","setStreams","useCallback","userId","call","on","rest","useCallPeer","callPeer","deferredUserIds","log","length","onUserConnected","emit","id","answer","onbeforeunload","disconnect","destroy","className","Home","v4","to","replace","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.6cdc9b7d.chunk.js","sourcesContent":["import Peer from \"peerjs\";\nimport React from \"react\";\n\nconst PORT = process.env.NODE_ENV === \"production\" ? 443 : 7000;\n\nexport const peer = new Peer(\"\", {\n  host: window.location.hostname,\n  path: \"/peerjs\",\n  port: PORT,\n});\n\nexport const PeerContext = React.createContext(peer);\n","import React from \"react\";\nimport { io } from \"socket.io-client\";\n\nexport const socket = io(window.location.origin);\nexport const SocketContext = React.createContext(socket);\n","import { PeerContext, peer } from \"./PeerContext\";\nimport { SocketContext, socket } from \"./SocketContext\";\n\nexport interface ContextProviderProps {\n  children: JSX.Element;\n}\n\nexport const ContextProvider = ({\n  children,\n}: ContextProviderProps): JSX.Element => {\n  return (\n    <SocketContext.Provider value={socket}>\n      <PeerContext.Provider value={peer}>{children}</PeerContext.Provider>\n    </SocketContext.Provider>\n  );\n};\n","import { useRef } from \"react\";\n\nexport interface VideoProps {\n  mediaStream: MediaStream | null;\n  isCamera?: boolean;\n}\n\nconst Video = ({ mediaStream, isCamera = false }: VideoProps): JSX.Element => {\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n\n  if (videoRef.current) {\n    videoRef.current.srcObject = mediaStream;\n  }\n\n  return (\n    <video\n      style={{ border: isCamera ? \"5px solid red\" : undefined }}\n      autoPlay\n      playsInline\n      ref={videoRef}\n    />\n  );\n};\n\nexport default Video;\n","import Video from \"./Video\";\n\nexport interface Streams {\n  [userId: string]: MediaStream;\n}\n\nexport interface VideoListProps {\n  streams: Streams;\n}\n\nconst VideoList = ({ streams }: VideoListProps): JSX.Element => {\n  const elements: JSX.Element[] = [];\n\n  for (const key in streams) {\n    if (streams.hasOwnProperty(key)) {\n      elements.push(<Video key={key} mediaStream={streams[key]} />);\n    }\n  }\n\n  return <>{elements}</>;\n};\n\nexport default VideoList;\n","export const roomRoute = \"/join/:roomId\";\n","import { useEffect, useState } from \"react\";\n\nconst useUserMedia = (\n  requestedMedia?: MediaStreamConstraints\n): MediaStream | null => {\n  const [mediaStream, setMediaStream] = useState<MediaStream | null>(null);\n\n  useEffect(() => {\n    const enableStream = async (): Promise<void> => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(\n          requestedMedia\n        );\n        setMediaStream(stream);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const cleanup = (): void => {\n      mediaStream?.getTracks().forEach((track) => track.stop());\n    };\n\n    if (!mediaStream) {\n      enableStream();\n    } else {\n      return cleanup;\n    }\n  }, [mediaStream, requestedMedia]);\n\n  return mediaStream;\n};\n\nexport default useUserMedia;\n","import \"./styles.css\";\n\nimport { PeerContext, SocketContext } from \"../../context\";\nimport { useCallback, useContext, useEffect, useRef, useState } from \"react\";\n\nimport Video from \"./Video\";\nimport VideoList from \"./VideoList\";\nimport { roomRoute } from \"./route\";\nimport { useCallPeer } from \"./useCallPeer\";\nimport { useRouteMatch } from \"react-router\";\nimport useUserMedia from \"./useUserMedia\";\n\ninterface RoomPathArgs {\n  roomId?: string;\n}\n\ninterface UserConnectedArgs {\n  userId?: string;\n}\n\nconst Room = (): JSX.Element => {\n  const match = useRouteMatch<RoomPathArgs>(roomRoute);\n  const [roomId] = useState<string | undefined>(match?.params.roomId);\n\n  const socket = useContext(SocketContext);\n  const peerjs = useContext(PeerContext);\n\n  const userMediaStream = useUserMedia({ audio: true, video: true });\n  const [callPeer, streams] = useCallPeer(peerjs, userMediaStream);\n\n  const deferredUserIds = useRef<string[]>([]);\n\n  useEffect(() => {\n    console.log(`calling ${deferredUserIds.current.length} deferred user ids`);\n\n    for (const userId of deferredUserIds.current) {\n      callPeer(userId);\n    }\n\n    deferredUserIds.current = [];\n  }, [callPeer]);\n\n  /**\n   * Event handler for when a new user connects to the room.\n   */\n  const onUserConnected = useCallback(\n    ({ userId }: UserConnectedArgs): void => {\n      console.log(\"user attempting to connect\");\n\n      // Ignore undefined users\n      if (!userId) {\n        console.error(\"user was invalid\");\n        return;\n      }\n\n      // If our media stream isn't running yet, defer connecting to the new user\n      if (!userMediaStream) {\n        deferredUserIds.current.push(userId);\n        console.log(`deferred userId ${userId} while waiting for media stream`);\n        return;\n      }\n\n      console.log(\"calling peer\");\n      callPeer(userId);\n    },\n    [callPeer, userMediaStream]\n  );\n\n  useEffect(() => {\n    if (!roomId || !userMediaStream) {\n      console.log(\"waiting for user media stream\");\n      return;\n    }\n\n    console.log(\"joining room\");\n    socket.emit(\"join-room\", { roomId, userId: peerjs.id });\n    socket.on(\"user-connected\", onUserConnected);\n\n    peerjs.on(\"open\", (userId) => {\n      socket.emit(\"join-room\", { roomId, userId });\n    });\n\n    peerjs.on(\"call\", (call) => {\n      call.answer(userMediaStream);\n    });\n  }, [onUserConnected, peerjs, roomId, socket, userMediaStream]);\n\n  useEffect(() => {\n    window.onbeforeunload = () => {\n      console.log(\"cleaning up\");\n      socket.disconnect();\n      peerjs.destroy();\n    };\n  }, [peerjs, socket]);\n\n  if (match === null || !match.params.roomId) {\n    return <div>Invalid room</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"room-title\">Room {match.params.roomId}</div>\n      <div className=\"video-grid\">\n        <Video mediaStream={userMediaStream} isCamera={true} />\n        <VideoList streams={streams} />\n      </div>\n    </div>\n  );\n};\n\nexport default Room;\n","import { useCallback, useState } from \"react\";\n\nimport Peer from \"peerjs\";\nimport { Streams } from \"./VideoList\";\n\ntype UseCallPeer = [(userId: string) => void, Streams];\n\nexport function useCallPeer(\n  peerjs: Peer,\n  userMediaStream: MediaStream | null\n): UseCallPeer {\n  const [streams, setStreams] = useState<Streams>({});\n\n  const callPeer = useCallback(\n    (userId: string): void => {\n      if (userId === undefined) {\n        console.error(\"userId was undefined\");\n        return;\n      }\n\n      if (userMediaStream === null) {\n        console.error(\"userMediaStream was null\");\n        return;\n      }\n\n      const call = peerjs.call(userId, userMediaStream);\n\n      // Register event handlers\n\n      call.on(\"stream\", (stream) => {\n        // When we receive a new stream, add it to streams\n        setStreams((streams) => ({ ...streams, [userId]: stream }));\n      });\n\n      call.on(\"close\", () => {\n        // When this call closes, remove the stream\n        setStreams((streams) => {\n          const { [userId]: omitted, ...rest } = streams;\n          return { ...rest };\n        });\n      });\n    },\n    [peerjs, userMediaStream]\n  );\n\n  return [callPeer, streams];\n}\n","import { Redirect } from \"react-router\";\nimport { roomRoute } from \"../Room\";\nimport { v4 } from \"uuid\";\n\nconst Home = (): JSX.Element => {\n  const id = v4();\n  return <Redirect to={roomRoute.replace(\":roomId\", id)} />;\n};\n\nexport default Home;\n","import Home, { homeRoute } from './components/Home';\nimport Room, { roomRoute } from './components/Room';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport React from 'react';\n\nconst App = (): JSX.Element => {\n  return (\n    <Router>\n      <Switch>\n        <Route path={homeRoute} exact={true} component={Home} />\n        <Route path={roomRoute} exact={true} component={Room} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","export const homeRoute = \"/\";\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import App from \"./App\";\nimport { ContextProvider } from \"./context\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 60;"],"sourceRoot":""}